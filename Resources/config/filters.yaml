services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Videni\Bundle\RestBundle\Filter\FilterOperatorRegistry:
        class: Videni\Bundle\RestBundle\Filter\FilterOperatorRegistry
        arguments:
            - [] # The operators. They are set by Videni\Bundle\RestBundle\DependencyInjection\AppRestExtension

    Videni\Bundle\RestBundle\Filter\FilterNames:
        arguments:
            - 'sort'
            - 'page'
            - 'size'

    Videni\Bundle\RestBundle\Filter\FilterValue\FilterValueAccessorFactory:
        arguments:
            # regex pattern to match the following operators: =, !=, <>, >, <, >=, <=, *, !*, ~, !~, ^, !^, $, !$
            - '(!|<|>|%%21|%%3C|%%3E)?=|<>|%%3C%%3E|<|>|\*|%%3C|%%3E|%%2A|(!|%%21)?(\*|~|\^|\$|%%2A|%%7E|%%5E|%%24)'
            - [] # The operators. They are set by Videni\Bundle\RestBundle\DependencyInjection\AppRestExtension

    Videni\Bundle\RestBundle\DependencyInjection\PaginatorConfiguration:
        class: Videni\Bundle\RestBundle\DependencyInjection\PaginatorConfiguration
        arguments:
            - '@Videni\Bundle\RestBundle\Filter\FilterOperatorRegistry'

    Videni\Bundle\RestBundle\Filter\Factory\ChainFilterFactory: ~

    Videni\Bundle\RestBundle\Filter\Factory\SimpleFilterFactory:
        tags:
            - { name: videni_rest.filter_factory, priority: -10 }

    Videni\Bundle\RestBundle\Filter\Factory\FilterFactoryInterface: '@Videni\Bundle\RestBundle\Filter\Factory\ChainFilterFactory'


    Videni\Bundle\RestBundle\Collection\QueryExpressionVisitorFactory:
        public: false
        arguments:
            - [] # The composite expressions. They are set by Videni\Bundle\RestBundle\DependencyInjection\Compiler\QueryExpressionCompilerPass
            - [] # The comparison expressions. They are set by Videni\Bundle\RestBundle\DependencyInjection\Compiler\QueryExpressionCompilerPass
            - '@Videni\Bundle\RestBundle\Util\EntityClassResolver'

    videni_rest.query.composite_expression.and:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\AndCompositeExpression
        public: false
        tags:
          - { name: videni_rest.query.composite_expression, type: 'AND' }

    videni_rest.query.composite_expression.or:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\OrCompositeExpression
        public: false
        tags:
          - { name: videni_rest.query.composite_expression, type: 'OR' }

    videni_rest.query.composite_expression.not:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NotCompositeExpression
        public: false
        tags:
          - { name: videni_rest.query.composite_expression, type: 'NOT' }

    videni_rest.query.comparison_expression.eq:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\EqComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: '=' }

    videni_rest.query.comparison_expression.neq:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NeqComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: '<>' }

    videni_rest.query.comparison_expression.gt:
       class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\GtComparisonExpression
       public: false
       tags:
         - { name: videni_rest.query.comparison_expression, operator: '>' }

    videni_rest.query.comparison_expression.gte:
       class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\GteComparisonExpression
       public: false
       tags:
         - { name: videni_rest.query.comparison_expression, operator: '>=' }

    videni_rest.query.comparison_expression.lt:
       class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\LtComparisonExpression
       public: false
       tags:
         - { name: videni_rest.query.comparison_expression, operator: '<' }

    videni_rest.query.comparison_expression.lte:
       class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\LteComparisonExpression
       public: false
       tags:
         - { name: videni_rest.query.comparison_expression, operator: '<=' }

    videni_rest.query.comparison_expression.in:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\InComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'IN' }

    videni_rest.query.comparison_expression.nin:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NinComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'NIN' }

    videni_rest.query.comparison_expression.member_of:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\MemberOfComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'MEMBER_OF' }

    videni_rest.query.comparison_expression.all_member_of:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\AllMemberOfComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'ALL_MEMBER_OF' }

    videni_rest.query.comparison_expression.exists:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\ExistsComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'EXISTS' }

    videni_rest.query.comparison_expression.empty:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\EmptyComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'EMPTY' }

    videni_rest.query.comparison_expression.neq_or_null:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NeqOrNullComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'NEQ_OR_NULL' }

    videni_rest.query.comparison_expression.neq_or_empty:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NeqOrEmptyComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'NEQ_OR_EMPTY' }

    videni_rest.query.comparison_expression.contains:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\ContainsComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'CONTAINS' }

    videni_rest.query.comparison_expression.not_contains:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NotContainsComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'NOT_CONTAINS' }

    videni_rest.query.comparison_expression.starts_with:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\StartsWithComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'STARTS_WITH' }

    videni_rest.query.comparison_expression.not_starts_with:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NotStartsWithComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'NOT_STARTS_WITH' }

    videni_rest.query.comparison_expression.ends_with:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\EndsWithComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'ENDS_WITH' }

    videni_rest.query.comparison_expression.not_ends_with:
        class: Videni\Bundle\RestBundle\Collection\QueryVisitorExpression\NotEndsWithComparisonExpression
        public: false
        tags:
          - { name: videni_rest.query.comparison_expression, operator: 'NOT_ENDS_WITH' }
