imports:
    - { resource: 'serializer.yaml'}
    - { resource: 'security.yaml'}

parameters:
    videni_rapid_graphql.data_persister.class: Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\DataPersister

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Videni\Bundle\RapidGraphQLBundle\Factory\ResourceFactory: ~

    Videni\Bundle\RapidGraphQLBundle\Factory\ParametersParser:
        arguments:
            - '@service_container'
            - '@Videni\Bundle\RapidGraphQLBundle\ExpressionLanguage\ExpressionLanguage'

    Videni\Bundle\RapidGraphQLBundle\Factory\ParametersParserInterface: '@Videni\Bundle\RapidGraphQLBundle\Factory\ParametersParser'

    Videni\Bundle\RapidGraphQLBundle\ExpressionLanguage\ExpressionLanguage: ~

    Videni\Bundle\RapidGraphQLBundle\Event\EventDispatcher:
        arguments:
            - "@event_dispatcher"

    Videni\Bundle\RapidGraphQLBundle\Doctrine\EventListener\ORMMappedSuperClassSubscriber:
        tags:
            - { name: "doctrine.event_subscriber", priority: 8192}

    Videni\Bundle\RapidGraphQLBundle\Doctrine\EventListener\ORMRepositoryClassSubscriber:
        tags:
            - { name: "doctrine.event_subscriber", priority: 8192}

    Videni\Bundle\RapidGraphQLBundle\Util\DoctrineHelper: ~

    Videni\Bundle\RapidGraphQLBundle\Util\EntityClassResolver: ~

    Videni\Bundle\RapidGraphQLBundle\Config\Resource\ConfigProvider:
        public: true
        arguments: []

    Videni\Bundle\RapidGraphQLBundle\Form\FormSchemaRespond: ~

    Videni\Bundle\RapidGraphQLBundle\Normalizer\FormView\ChoiceFormViewNormalizer:
        tags:
            - { name: 'videni_rapid_graphql.form_view.normalizer', priority: 1 }

    Videni\Bundle\RapidGraphQLBundle\Normalizer\FormView\FormViewNormalizer: ~

    Videni\Bundle\RapidGraphQLBundle\Normalizer\FormView\FormViewNormalizerResolver: ~

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\DataPersister:
        class: '%videni_rapid_graphql.data_persister.class%'

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\FormHandler: ~

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\ResourceContextResolver: ~

    Videni\Bundle\RapidGraphQLBundle\Controller\ControllerResolver: ~

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\ControllerExecutor:
        arguments:
            - '@Videni\Bundle\RapidGraphQLBundle\Controller\ControllerResolver'
            - '@argument_resolver'

# Resource provider
    Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\FactoryResourceProvider: ~

    Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\ExpressionResourceProvider: ~

    Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\EntityRepositoryResourceProvider:
        arguments:
            - '@service_container'
            - '@Videni\Bundle\RapidGraphQLBundle\Factory\ParametersParserInterface'
            - '@Doctrine\Common\Persistence\ManagerRegistry'

    Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\ChainResourceProvider:
        calls:
            - [add, ['@Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\ExpressionResourceProvider', 5]]
            - [add, ['@Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\FactoryResourceProvider', 0]]
            - [add, ['@Videni\Bundle\RapidGraphQLBundle\Provider\ResourceProvider\EntityRepositoryResourceProvider', -5]]

# Resolver
    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\Create:
        tags:
            - { name: overblog_graphql.mutation, alias: create }
            - { name: overblog_graphql.mutation, alias: update }

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\Delete:
        tags:
            - { name: overblog_graphql.mutation, alias: delete }

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\Index:
        tags:
            - { name: overblog_graphql.resolver, alias: index }

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\View:
        tags:
            - { name: overblog_graphql.resolver, alias: view }

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\FormSchema:
        tags:
            - { name: overblog_graphql.resolver, alias: formSchema }

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\Link:
        tags:
            - { name: overblog_graphql.resolver, alias: link }

    Videni\Bundle\RapidGraphQLBundle\GraphQL\Resolver\DateTime:
        tags:
            - { name: overblog_graphql.resolver, alias: datetime }


