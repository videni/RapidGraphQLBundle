imports:
    - { resource: 'serializer.yaml'}
    - { resource: 'security.yaml'}

parameters:
    videni_rest.data_persister.class: Videni\Bundle\RestBundle\Resolver\DataPersister

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Videni\Bundle\RestBundle\Factory\ResourceFactory: ~

    Videni\Bundle\RestBundle\Factory\ParametersParser:
        arguments:
            - '@service_container'
            - '@Videni\Bundle\RestBundle\ExpressionLanguage\ExpressionLanguage'

    Videni\Bundle\RestBundle\Factory\ParametersParserInterface: '@Videni\Bundle\RestBundle\Factory\ParametersParser'

    Videni\Bundle\RestBundle\ExpressionLanguage\ExpressionLanguage: ~

    Videni\Bundle\RestBundle\Event\EventDispatcher:
        arguments:
            - "@event_dispatcher"

    Videni\Bundle\RestBundle\Doctrine\EventListener\ORMMappedSuperClassSubscriber:
        tags:
            - { name: "doctrine.event_subscriber", priority: 8192}

    Videni\Bundle\RestBundle\Doctrine\EventListener\ORMRepositoryClassSubscriber:
        tags:
            - { name: "doctrine.event_subscriber", priority: 8192}

    Videni\Bundle\RestBundle\Util\DoctrineHelper: ~

    Videni\Bundle\RestBundle\Util\EntityClassResolver: ~

    Videni\Bundle\RestBundle\Config\Resource\ConfigProvider:
        public: true
        arguments: []

    Videni\Bundle\RestBundle\Form\FormHandler: ~

    Videni\Bundle\RestBundle\Normalizer\FormView\ChoiceFormViewNormalizer:
        tags:
            - { name: 'videni_rest.form_view.normalizer', priority: 1 }

    Videni\Bundle\RestBundle\Normalizer\FormView\FormViewNormalizer: ~

    Videni\Bundle\RestBundle\Normalizer\FormView\FormViewNormalizerResolver: ~

    Videni\Bundle\RestBundle\Resolver\DataPersister:
        class: '%videni_rest.data_persister.class%'

    Videni\Bundle\RestBundle\Resolver\FormHandler: ~

    Videni\Bundle\RestBundle\Resolver\ResourceContextResolver: ~

# Resource provider
    Videni\Bundle\RestBundle\Provider\ResourceProvider\FactoryResourceProvider: ~

    Videni\Bundle\RestBundle\Provider\ResourceProvider\ExpressionResourceProvider: ~

    Videni\Bundle\RestBundle\Provider\ResourceProvider\EntityRepositoryResourceProvider:
        arguments:
            - '@service_container'
            - '@Videni\Bundle\RestBundle\Factory\ParametersParserInterface'
            - '@Doctrine\Common\Persistence\ManagerRegistry'

    Videni\Bundle\RestBundle\Provider\ResourceProvider\ChainResourceProvider:
        calls:
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\ExpressionResourceProvider', 5]]
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\FactoryResourceProvider', 0]]
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\EntityRepositoryResourceProvider', -5]]

# Resolver
    Videni\Bundle\RestBundle\Resolver\Update:
        tags:
            - { name: overblog_graphql.mutation, alias: update }

    Videni\Bundle\RestBundle\Resolver\Create:
        tags:
            - { name: overblog_graphql.mutation, alias: create }

    Videni\Bundle\RestBundle\Resolver\Delete:
        tags:
            - { name: overblog_graphql.mutation, alias: delete }

    Videni\Bundle\RestBundle\Resolver\Index:
        tags:
            - { name: overblog_graphql.resolver, alias: index }

    Videni\Bundle\RestBundle\Resolver\View:
        tags:
            - { name: overblog_graphql.resolver, alias: view }
