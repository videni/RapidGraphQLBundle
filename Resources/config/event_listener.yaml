parameters:
    videni_rest.data_persister.class: Videni\Bundle\RestBundle\EventListener\DataPersister

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Videni\Bundle\RestBundle\Context\ResourceContextStorage: ~

    Videni\Bundle\RestBundle\Provider\ResourceProvider\CollectionResourceProvider:  ~

    Videni\Bundle\RestBundle\Provider\ResourceProvider\FactoryResourceProvider: ~

    Videni\Bundle\RestBundle\Provider\ResourceProvider\ExpressionResourceProvider:
        arguments:
            - '@service_container'
            - '@Videni\Bundle\RestBundle\ExpressionLanguage\ExpressionLanguage'

    Videni\Bundle\RestBundle\Provider\ResourceProvider\ChainResourceProvider:
        calls:
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\ExpressionResourceProvider', 5]]
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\FactoryResourceProvider', 0]]
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\EntityRepositoryResourceProvider', -5]]
            - [add, ['@Videni\Bundle\RestBundle\Provider\ResourceProvider\CollectionResourceProvider', -10]]

    Videni\Bundle\RestBundle\Provider\ResourceProvider\EntityRepositoryResourceProvider:
        arguments:
            - '@service_container'
            - '@Videni\Bundle\RestBundle\Factory\ParametersParserInterface'
            - '@Doctrine\Common\Persistence\ManagerRegistry'

    Videni\Bundle\RestBundle\EventListener\DataPersister:
        class: '%videni_rest.data_persister.class%'

    Videni\Bundle\RestBundle\Decoder\ContainerDecoderProvider:
        arguments:
            - '@service_container'
            - []

    Videni\Bundle\RestBundle\Decoder\DecoderProviderInterface: '@Videni\Bundle\RestBundle\Decoder\ContainerDecoderProvider'

    Videni\Bundle\RestBundle\Decoder\JsonDecoder: ~

    Videni\Bundle\RestBundle\Normalizer\CamelKeysNormalizer: ~

    Videni\Bundle\RestBundle\Normalizer\ArrayNormalizerInterface: '@Videni\Bundle\RestBundle\Normalizer\CamelKeysNormalizer'

    Negotiation\Negotiator: ~

# kernel.request event
    Videni\Bundle\RestBundle\EventListener\ResourceContextListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 31 }

    Videni\Bundle\RestBundle\EventListener\FormatListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 16 }

    Videni\Bundle\RestBundle\EventListener\BodyListener:
        arguments:
            - '@Videni\Bundle\RestBundle\Normalizer\ArrayNormalizerInterface'
            - '@Videni\Bundle\RestBundle\Decoder\DecoderProviderInterface'
            - false
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 8 }

    Videni\Bundle\RestBundle\EventListener\ResourceProviderListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 6 }

    Videni\Bundle\RestBundle\EventListener\DenyAccessListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 4 }

    Videni\Bundle\RestBundle\EventListener\FormListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.request', method: 'onKernelRequest', priority: 2 }

# kernel.view event
    Videni\Bundle\RestBundle\EventListener\WriteListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.view', method: 'onKernelView', priority: 32 }

    Videni\Bundle\RestBundle\EventListener\SerializeListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.view', method: 'onKernelView', priority: 16 }

    Videni\Bundle\RestBundle\EventListener\RespondListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.view', method: 'onKernelView', priority: 8 }

# kernel.exception event
    Videni\Bundle\RestBundle\Validator\EventListener\ValidationExceptionListener:
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', method: 'onKernelException'}

    Videni\Bundle\RestBundle\Action\ExceptionAction:
        arguments:
            - '@jms_serializer'
            - '%videni_rest.exception_to_status%'
            - '%kernel.debug%'

    Videni\Bundle\RestBundle\EventListener\ExceptionListener:
        arguments:
            - '@Videni\Bundle\RestBundle\Action\ExceptionAction'
            - '@?logger'
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', method: 'onKernelException', priority: -96}
            - { name: 'monolog.logger', channel: 'request'}
